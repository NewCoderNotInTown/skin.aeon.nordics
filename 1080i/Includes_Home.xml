<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Main Menu Includes -->
	<include name="MainMenuListContent">
		<control type="wraplist" id="9000">
			<left>-320</left>
			<top>70</top>
			<right>-590</right>
			<height>100</height>
			<onleft>9000</onleft>
			<onright>9000</onright>
			<movement>1</movement>
			<onup condition="Control.IsVisible(9004) + ![System.HasMediaDVD | System.HasAddon(script.globalsearch)]">9004</onup>
			<onup condition="Control.IsVisible(9003) + ![System.HasMediaDVD | System.HasAddon(script.globalsearch)]">9003</onup>
			<onup condition="System.HasMediaDVD | System.HasAddon(script.globalsearch) | !Skin.HasSetting(showWidget)">9020</onup>
			<ondown>9001</ondown>
			<pagecontrol/>
			<scrolltime tween="sine" easing="out">400</scrolltime>
			<focusposition>2</focusposition>
			<orientation>Horizontal</orientation>
			<animation effect="slide" start="0" end="-350,0" time="320" tween="cubic" easing="inout" condition="true">Conditional</animation>
			<itemlayout height="100" width="640">
				<control type="label">
					<animation effect="zoom" end="90" time="0" condition="true">Conditional</animation>
					<visible>!Control.HasFocus(9010)</visible>
					<animation type="Visible">
						<effect type="fade" start="0" end="100" time="250"/>
					</animation>
					<left>50</left>
					<width>590</width>
					<height>100</height>
					<font>font_MainMenu2</font>
					<textcolor>grey3</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="640">
				<control type="label">
					<scroll>false</scroll>
					<animation effect="zoom" center="325,40" start="100" end="110" condition="true">Conditional</animation>
					<left>50</left>
					<width>625</width>
					<height>90</height>
					<font>font_MainMenu</font>
					<textcolor>grey2</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<visible>!Control.HasFocus(9000)</visible>
				</control>
				<control type="label">
					<animation effect="zoom" center="325,40" start="100" end="110" time="300" delay="225" tween="quadratic" easing="out">Focus</animation>
					<animation type="UnFocus" reversible="false">
						<effect type="zoom" center="325,40" start="100" end="110" time="100" tween="quadratic" easing="in"/>
						<effect type="fade" start="100" end="0" time="100"/>
					</animation>
					<animation type="Visible">
						<effect type="zoom" start="70" end="100" center="auto" tween="sine" easing="inout" time="300"/>
					</animation>
					<scroll>false</scroll>
					<left>50</left>
					<width>625</width>
					<height>90</height>
					<font>font_MainMenu</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<visible>Control.HasFocus(9000)</visible>
				</control>
			</focusedlayout>
			<include>FallbackMenu</include>
		</control>
	</include>
	<include name="MainMenuListContentVertical">
		<control type="group">
			<visible>!System.HasActiveModalDialog</visible>
			<visible>!Window.IsActive(shutdownmenu)</visible>
			<control type="wraplist" id="9000">
				<left>20</left>
				<top>-340</top>
				<height>600</height>
				<width>950</width>
				<ondown>9000</ondown>
				<onup>9000</onup>
				<movement>1</movement>
				<onleft condition="Control.IsVisible(9003)">9003</onleft>
				<onleft condition="Control.IsVisible(9004)">9004</onleft>
				<onleft condition="System.HasMediaDVD | System.HasAddon(script.globalsearch) | !Skin.HasSetting(showWidget)">9020</onleft>
				<onright>9001</onright>
				<pagecontrol/>
				<scrolltime tween="sine" easing="out">300</scrolltime>
				<focusposition>1</focusposition>
				<orientation>Vertical</orientation>
				<itemlayout height="100" width="940">
					<control type="label">
						<visible>!Control.HasFocus(9010)</visible>
						<left>50</left>
						<width>930</width>
						<height>90</height>
						<font>font_MainMenu2</font>
						<textcolor>grey3</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout height="100" width="940">
					<control type="label">
						<scroll>false</scroll>
						<animation effect="zoom" center="46,50" start="100" end="125" condition="true">Conditional</animation>
						<left>50</left>
						<width>930</width>
						<height>90</height>
						<font>font_MainMenu</font>
						<textcolor>grey2</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
						<visible>!Control.HasFocus(9000)</visible>
					</control>
					<control type="label">
						<animation type="Visible" reversible="false">
							<effect type="zoom" center="46,50" start="80" end="100" time="300" tween="quadratic" easing="in"/>
						</animation>
						<animation effect="zoom" center="46,50" start="100" end="125" condition="true">Conditional</animation>
						<scroll>false</scroll>
						<left>50</left>
						<width>930</width>
						<height>90</height>
						<font>font_MainMenu</font>
						<textcolor>white</textcolor>
						<align>left</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
						<visible>Control.HasFocus(9000)</visible>
					</control>
				</focusedlayout>
				<include>FallbackMenu</include>
			</control>
		</control>
	</include>
	<include name="MenuHoriz">
		<control type="group">
			<visible>!Skin.HasSetting(VerticalMenu)</visible>
			<top>453</top>
			<depth>0.30</depth>
			<animation effect="slide" end="0,338" time="320" tween="cubic" easing="inout" condition="true">Conditional</animation>
			<control type="group" id="9001">
				<top>170</top>
				<animation effect="slide" start="1870,0" end="0,0" delay="300" time="240" condition="!Window.Previous(startup)">WindowOpen</animation>
				<animation effect="slide" start="1870,0" end="0,0" delay="200" time="480" condition="Window.Previous(startup)">WindowOpen</animation>
				<control type="fixedlist" id="9010">
					<left>5</left>
					<width>1910</width>
					<top>8</top>
					<height>87</height>
					<onup>9000</onup>
					<ondown>9000</ondown>
					<onback>9000</onback>
					<pagecontrol/>
					<scrolltime tween="quadratic" easing="out">500</scrolltime>
					<focusposition>2</focusposition>
					<movement>2</movement>
					<orientation>Horizontal</orientation>
					<itemlayout height="87" width="385">
						<control type="label">
							<animation type="Visible">
								<effect type="fade" start="0" end="100" tween="sine" easing="in" time="400"/>
								<effect type="slide" start="0,-70" end="0,0" time="400" tween="circle" easing="out"/>
							</animation>
							<visible>Control.HasFocus(9010)</visible>
							<width>385</width>
							<height>41</height>
							<font>font15t</font>
							<textcolor>grey2</textcolor>
							<align>center</align>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout height="87" width="385">
						<control type="label">
							<animation type="Visible">
								<effect type="fade" start="0" end="100" tween="sine" easing="in" time="400"/>
								<effect type="slide" start="0,-70" end="0,0" time="400" tween="circle" easing="out"/>
							</animation>
							<visible>Control.HasFocus(9010)</visible>
							<width>385</width>
							<height>41</height>
							<textcolor>white</textcolor>
							<font>font15t</font>
							<align>center</align>
							<label>[B]$INFO[ListItem.Label][/B]</label>
						</control>
					</focusedlayout>
					<include>CustomSubMenu</include>
				</control>
			</control>
			<control type="image">
				<visible>Control.HasFocus(9010)</visible>
				<animation type="Visible">
					<effect type="fade" start="0" end="100" tween="sine" easing="out" time="400"/>
					<effect type="slide" start="0,-70" end="0,0" time="400" tween="sine" easing="out"/>
				</animation>
				<animation type="Hidden">
					<effect type="fade" start="100" end="0" tween="sine" easing="in" time="400"/>
				</animation>
				<left>35</left>
				<top>165</top>
				<width>1838</width>
				<height>1</height>
				<texture background="true" colordiffuse="grey3">tajo/white.jpg</texture>
			</control>
			<!-- Main Menu (Includes_Home.xml) -->
			<include>MainMenuListContent</include>
		</control>
	</include>
	<include name="MenuVert">
		<control type="group">
			<visible>Skin.HasSetting(VerticalMenu)</visible>
			<top>453</top>
			<depth>0.30</depth>
			<animation effect="slide" end="0,338" time="320" tween="cubic" easing="inout" condition="true">Conditional</animation>
			<control type="group" id="9001">
				<top>170</top>
				<animation effect="slide" start="1870,0" end="0,0" delay="300" time="240" condition="!Window.Previous(startup)">WindowOpen</animation>
				<animation effect="slide" start="1870,0" end="0,0" delay="200" time="480" condition="Window.Previous(startup)">WindowOpen</animation>
				<control type="fixedlist" id="9010">
					<left>72</left>
					<width>900</width>
					<top>-305</top>
					<height>371</height>
					<onright>9000</onright>
					<onleft>9000</onleft>
					<onback>9000</onback>
					<pagecontrol/>
					<scrolltime tween="quadratic" easing="out">300</scrolltime>
					<focusposition>0</focusposition>
					<movement>8</movement>
					<orientation>Vertical</orientation>
					<itemlayout height="41" width="885">
						<control type="label">
							<animation type="Visible">
								<effect type="fade" start="0" end="100" tween="sine" easing="in" time="450"/>
								<effect type="slide" start="0,-70" end="0,0" time="400" tween="circle" easing="out"/>
							</animation>
							<visible>Control.HasFocus(9010)</visible>
							<width>875</width>
							<height>41</height>
							<font>font35</font>
							<textcolor>grey2</textcolor>
							<align>left</align>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout height="41" width="885">
						<control type="label">
							<animation type="Visible">
								<effect type="fade" start="0" end="100" tween="sine" easing="in" time="450"/>
								<effect type="slide" start="0,-70" end="0,0" time="400" tween="circle" easing="out"/>
							</animation>
							<visible>Control.HasFocus(9010)</visible>
							<width>875</width>
							<height>41</height>
							<textcolor>white</textcolor>
							<font>font35</font>
							<align>left</align>
							<label>[B]$INFO[ListItem.Label][/B]</label>
						</control>
					</focusedlayout>
					<include>CustomSubMenu</include>
				</control>
			</control>
			<control type="image">
				<visible>Control.HasFocus(9010)</visible>
				<visible>!System.HasActiveModalDialog</visible>
				<animation type="Visible">
					<effect type="fade" start="0" end="100" tween="sine" easing="in" time="400"/>
					<effect type="slide" start="0,-70" end="0,0" time="400" tween="circle" easing="out"/>
				</animation>
				<left>70</left>
				<top>-146</top>
				<width>500</width>
				<height>1</height>
				<texture background="true" colordiffuse="grey3">tajo/white.jpg</texture>
			</control>
			<!-- Main Menu (Includes_Home.xml) -->
			<include>MainMenuListContentVertical</include>
		</control>
	</include>
	<!--Main Menu-->
	<include name="PicturesMainMenu">
		<item id="4">
			<label fallback="31951">$INFO[Skin.String(PicturesHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultPicture.png">$INFO[Skin.String(PicturesHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(PicturesHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Pictures)">$INFO[Skin.String(PicturesHomeItem.Path)]</property>
			<property name="Item">Pictures</property>
			<property name="BGType">$INFO[Skin.String(PicturesHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(PicturesHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(PicturesHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(PicturesHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(PicturesHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x4">$INFO[Skin.String(PicturesHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(PicturesHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="MusicMainMenu">
		<item id="3">
			<label fallback="31956">$INFO[Skin.String(MusicHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultAddonMusic.png">$INFO[Skin.String(MusicHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(MusicHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Music,library://music/,return)">$INFO[Skin.String(MusicHomeItem.Path)]</property>
			<property name="Item">Music</property>
			<property name="BGType">$INFO[Skin.String(MusicHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(MusicHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(MusicHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(MusicHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(MusicHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x3">$INFO[Skin.String(MusicHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(MusicHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="MoviesMainMenu">
		<item id="10">
			<label fallback="31954">$INFO[Skin.String(MovieHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultMovies.png">$INFO[Skin.String(MovieHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(MovieHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Videos,videodb://movies/titles/,return)">$INFO[Skin.String(MovieHomeItem.Path)]</property>
			<property name="Item">Movie</property>
			<property name="BGType">$INFO[Skin.String(MovieHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(MovieHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(MovieHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(MovieHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(MovieHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x10">$INFO[Skin.String(MovieHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(MovieHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="TVShowsMainMenu">
		<item id="11">
			<label fallback="31955">$INFO[Skin.String(TVShowHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultTVShows.png">$INFO[Skin.String(TVShowHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(TVShowHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Videos,videodb://tvshows/titles/,return)">$INFO[Skin.String(TVShowHomeItem.Path)]</property>
			<property name="Item">TVShow</property>
			<property name="BGType">$INFO[Skin.String(TVShowHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(TVShowHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(TVShowHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(TVShowHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(TVShowHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x11">$INFO[Skin.String(TVShowHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(TVShowHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="TVMainMenu">
		<item id="12">
			<label fallback="31952">$INFO[Skin.String(LiveTVHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultAddonPVRClient.png">$INFO[Skin.String(LiveTVHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(LiveTVHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(tvchannels)">$INFO[Skin.String(LiveTVHomeItem.Path)]</property>
			<property name="Item">LiveTV</property>
			<property name="BGType">$INFO[Skin.String(LiveTVHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(LiveTVHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(LiveTVHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(LiveTVHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(LiveTVHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x12">$INFO[Skin.String(LiveTVHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(LiveTVHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="VideosMainMenu">
		<item id="2">
			<label fallback="31953">$INFO[Skin.String(VideosHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultVideo.png">$INFO[Skin.String(VideosHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(VideosHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Videos,root)">$INFO[Skin.String(VideosHomeItem.Path)]</property>
			<property name="Item">Videos</property>
			<property name="BGType">$INFO[Skin.String(VideosHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(VideosHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(VideosHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(VideosHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(VideosHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x2">$INFO[Skin.String(VideosHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(VideosHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="ProgramsMainMenu">
		<item id="1">
			<label fallback="31957">$INFO[Skin.String(ProgramsHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultProgram.png">$INFO[Skin.String(ProgramsHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(ProgramsHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(1133)">$INFO[Skin.String(ProgramsHomeItem.Path)]</property>
			<property name="Item">Programs</property>
			<property name="BGType">$INFO[Skin.String(ProgramsHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(ProgramsHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(ProgramsHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(ProgramsHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(ProgramsHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x1">$INFO[Skin.String(ProgramsHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(ProgramsHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="GamesMainMenu">
		<item id="9">
			<label fallback="15016">$INFO[Skin.String(GamesHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultProgram.png">$INFO[Skin.String(GamesHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(GamesHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(games)">$INFO[Skin.String(GamesHomeItem.Path)]</property>
			<property name="Item">Games</property>
			<property name="BGType">$INFO[Skin.String(GamesHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(GamesHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(GamesHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(GamesHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(GamesHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x9">$INFO[Skin.String(GamesHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(GamesHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="SettingsMainMenu">
		<item id="5">
			<label fallback="31959">$INFO[Skin.String(SettingsHomeItem.Label)]</label>
			<!-- <onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick> -->
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultAddonService.png">$INFO[Skin.String(SettingsHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(SettingsHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Settings)">$INFO[Skin.String(SettingsHomeItem.Path)]</property>
			<property name="Item">Settings</property>
			<property name="BGType">$INFO[Skin.String(SettingsHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(SettingsHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(SettingsHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(SettingsHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(SettingsHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x5">$INFO[Skin.String(SettingsHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(SettingsHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="ShutdownMainMenu">
		<item id="6">
			<label fallback="33060">$INFO[Skin.String(ShutdownHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/power.png">$INFO[Skin.String(ShutdownHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(ShutdownHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(shutdownmenu)">$INFO[Skin.String(ShutdownHomeItem.Path)]</property>
			<property name="Item">Shutdown</property>
			<property name="BGType">$INFO[Skin.String(ShutdownHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(ShutdownHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(ShutdownHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(ShutdownHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(ShutdownHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x6">$INFO[Skin.String(ShutdownHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(ShutdownHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="FavoritesMainMenu">
		<item id="8">
			<label fallback="1036">$INFO[Skin.String(FavoritesHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Favorites.png">$INFO[Skin.String(FavoritesHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(FavoritesHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Favouritesbrowser)">$INFO[Skin.String(FavoritesHomeItem.Path)]</property>
			<property name="Item">Favorites</property>
			<property name="BGType">$INFO[Skin.String(FavoritesHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(FavoritesHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(FavoritesHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(FavoritesHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(FavoritesHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x8">$INFO[Skin.String(FavoritesHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(FavoritesHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="WeatherMainMenu">
		<item id="7">
			<label fallback="31950">$INFO[Skin.String(WeatherHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultAddonWeather.png">$INFO[Skin.String(WeatherHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(WeatherHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Weather)">$INFO[Skin.String(WeatherHomeItem.Path)]</property>
			<property name="Item">Weather</property>
			<property name="BGType">$INFO[Skin.String(WeatherHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(WeatherHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(WeatherHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(WeatherHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(WeatherHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x7">$INFO[Skin.String(WeatherHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(WeatherHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="MusicVideosMainMenu">
		<item id="13">
			<label fallback="20389">$INFO[Skin.String(MusicVideoHomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="views/list/DefaultMusicVideos.png">$INFO[Skin.String(MusicVideoHomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(MusicVideoHomeItem.MultiFanart)]</thumb>
			<property name="Path" fallback="ActivateWindow(Music,library://music/musicvideos/,return)">$INFO[Skin.String(MusicVideoHomeItem.Path)]</property>
			<property name="Item">MusicVideo</property>
			<property name="BGType">$INFO[Skin.String(MusicVideoHomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(MusicVideoHomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(MusicVideoHomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(MusicVideoHomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(MusicVideoHomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x13">$INFO[Skin.String(MusicVideoHomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(MusicVideoHomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem1">
		<item id="101">
			<label fallback="CUSTOM1">$INFO[Skin.String(Custom1HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom1HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom1HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom1HomeItem.Path)]</property>
			<property name="Item">Custom1</property>
			<property name="BGType">$INFO[Skin.String(Custom1HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom1HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom1HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom1HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom1HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x101">$INFO[Skin.String(Custom1HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom1HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem2">
		<item id="202">
			<label fallback="CUSTOM2">$INFO[Skin.String(Custom2HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom2HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom2HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom2HomeItem.Path)]</property>
			<property name="Item">Custom2</property>
			<property name="BGType">$INFO[Skin.String(Custom2HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom2HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom2HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom2HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom2HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x202">$INFO[Skin.String(Custom2HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom2HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem3">
		<item id="303">
			<label fallback="CUSTOM3">$INFO[Skin.String(Custom3HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom3HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom3HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom3HomeItem.Path)]</property>
			<property name="Item">Custom3</property>
			<property name="BGType">$INFO[Skin.String(Custom3HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom3HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom3HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom3HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom3HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x303">$INFO[Skin.String(Custom3HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom3HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem4">
		<item id="404">
			<label fallback="CUSTOM4">$INFO[Skin.String(Custom4HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom4HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom4HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom4HomeItem.Path)]</property>
			<property name="Item">Custom4</property>
			<property name="BGType">$INFO[Skin.String(Custom4HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom4HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom4HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom4HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom4HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x404">$INFO[Skin.String(Custom4HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom4HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem5">
		<item id="505">
			<label fallback="CUSTOM5">$INFO[Skin.String(Custom5HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom5HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom5HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom5HomeItem.Path)]</property>
			<property name="Item">Custom5</property>
			<property name="BGType">$INFO[Skin.String(Custom5HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom5HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom5HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom5HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom5HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x505">$INFO[Skin.String(Custom5HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom5HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem6">
		<item id="606">
			<label fallback="CUSTOM6">$INFO[Skin.String(Custom6HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom6HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom6HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom6HomeItem.Path)]</property>
			<property name="Item">Custom6</property>
			<property name="BGType">$INFO[Skin.String(Custom6HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom6HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom6HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom6HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom6HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x606">$INFO[Skin.String(Custom6HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom6HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem7">
		<item id="707">
			<label fallback="CUSTOM7">$INFO[Skin.String(Custom7HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom7HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom7HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom7HomeItem.Path)]</property>
			<property name="Item">Custom7</property>
			<property name="BGType">$INFO[Skin.String(Custom7HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom7HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom7HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom7HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom7HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x707">$INFO[Skin.String(Custom7HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom7HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem8">
		<item id="808">
			<label fallback="CUSTOM8">$INFO[Skin.String(Custom8HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom8HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom8HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom8HomeItem.Path)]</property>
			<property name="Item">Custom8</property>
			<property name="BGType">$INFO[Skin.String(Custom8HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom8HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom8HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom8HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom8HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x808">$INFO[Skin.String(Custom8HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom8HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem9">
		<item id="909">
			<label fallback="CUSTOM9">$INFO[Skin.String(Custom9HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom9HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom9HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom9HomeItem.Path)]</property>
			<property name="Item">Custom9</property>
			<property name="BGType">$INFO[Skin.String(Custom9HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom9HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom9HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom9HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom9HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x909">$INFO[Skin.String(Custom9HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom9HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem10">
		<item id="910">
			<label fallback="CUSTOM10">$INFO[Skin.String(Custom10HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom10HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom10HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom10HomeItem.Path)]</property>
			<property name="Item">Custom10</property>
			<property name="BGType">$INFO[Skin.String(Custom10HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom10HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom10HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom10HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom10HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x910">$INFO[Skin.String(Custom10HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom10HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem11">
		<item id="911">
			<label fallback="CUSTOM11">$INFO[Skin.String(Custom11HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom11HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom11HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom11HomeItem.Path)]</property>
			<property name="Item">Custom11</property>
			<property name="BGType">$INFO[Skin.String(Custom11HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom11HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom11HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom11HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom11HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x911">$INFO[Skin.String(Custom11HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom11HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem12">
		<item id="912">
			<label fallback="CUSTOM12">$INFO[Skin.String(Custom12HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom12HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom12HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom12HomeItem.Path)]</property>
			<property name="Item">Custom12</property>
			<property name="BGType">$INFO[Skin.String(Custom12HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom12HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom12HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom12HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom12HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x912">$INFO[Skin.String(Custom12HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom12HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem13">
		<item id="913">
			<label fallback="CUSTOM13">$INFO[Skin.String(Custom13HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom13HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom13HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom13HomeItem.Path)]</property>
			<property name="Item">Custom13</property>
			<property name="BGType">$INFO[Skin.String(Custom13HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom13HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom13HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom13HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom13HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x913">$INFO[Skin.String(Custom13HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom13HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem14">
		<item id="914">
			<label fallback="CUSTOM14">$INFO[Skin.String(Custom14HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom14HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom14HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom14HomeItem.Path)]</property>
			<property name="Item">Custom14</property>
			<property name="BGType">$INFO[Skin.String(Custom14HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom14HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom14HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom14HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom14HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x914">$INFO[Skin.String(Custom14HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom14HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem15">
		<item id="915">
			<label fallback="CUSTOM15">$INFO[Skin.String(Custom15HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom15HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom15HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom15HomeItem.Path)]</property>
			<property name="Item">Custom15</property>
			<property name="BGType">$INFO[Skin.String(Custom15HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom15HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom15HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom15HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom15HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x915">$INFO[Skin.String(Custom15HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom15HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem16">
		<item id="916">
			<label fallback="CUSTOM16">$INFO[Skin.String(Custom16HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom16HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom16HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom16HomeItem.Path)]</property>
			<property name="Item">Custom16</property>
			<property name="BGType">$INFO[Skin.String(Custom16HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom16HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom16HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom16HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom16HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x916">$INFO[Skin.String(Custom16HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom16HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem17">
		<item id="917">
			<label fallback="CUSTOM17">$INFO[Skin.String(Custom17HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom17HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom17HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom17HomeItem.Path)]</property>
			<property name="Item">Custom17</property>
			<property name="BGType">$INFO[Skin.String(Custom17HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom17HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom17HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom17HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom17HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x917">$INFO[Skin.String(Custom17HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom17HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem18">
		<item id="918">
			<label fallback="CUSTOM18">$INFO[Skin.String(Custom18HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom18HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom18HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom18HomeItem.Path)]</property>
			<property name="Item">Custom18</property>
			<property name="BGType">$INFO[Skin.String(Custom18HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom18HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom18HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom18HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom18HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x918">$INFO[Skin.String(Custom18HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom18HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="CustomMainMenuItem19">
		<item id="919">
			<label fallback="CUSTOM19">$INFO[Skin.String(Custom19HomeItem.Label)]</label>
			<onclick condition="Skin.HasSetting(melodyForHome) + Player.Playing + String.StartsWith(Player.Filenameandpath,Skin.String(melodyPlaylist))">Stop</onclick>
			<onclick>$INFO[Container(9000).ListItem.Property(Path)]</onclick>
			<icon fallback="special://skin/extras/icons/Customize.png">$INFO[Skin.String(Custom19HomeItem.Icon)]</icon>
			<thumb>$INFO[Skin.String(Custom19HomeItem.MultiFanart)]</thumb>
			<property name="Path">$INFO[Skin.String(Custom19HomeItem.Path)]</property>
			<property name="Item">Custom19</property>
			<property name="BGType">$INFO[Skin.String(Custom19HomeItem.BGType)]</property>
			<property name="Widget">$INFO[Skin.String(Custom19HomeItem.Widget)]</property>
			<property name="WidgetLabel">$INFO[Skin.String(Custom19HomeItem.WidgetLabel)]</property>
			<property name="WidgetType">$INFO[Skin.String(Custom19HomeItem.WidgetType)]</property>
			<property name="InfoLine">$INFO[Skin.String(Custom19HomeItem.InfoLine)]</property>
			<property name="submenuVisibility" fallback="x919">$INFO[Skin.String(Custom19HomeItem.SubMenu)]</property>
			<property name="Disable">$INFO[Skin.String(Custom19HomeItem.Disable)]</property>
		</item>
	</include>
	<include name="FallbackMenu">
		<content>
			<include condition="String.IsEmpty(Skin.String(PicturesHomeItem.Disable))">PicturesMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(MusicHomeItem.Disable))">MusicMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(MovieHomeItem.Disable))">MoviesMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(TVShowHomeItem.Disable))">TVShowsMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(LiveTVHomeItem.Disable))">TVMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(VideosHomeItem.Disable))">VideosMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(GamesHomeItem.Disable))">GamesMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(ProgramsHomeItem.Disable))">ProgramsMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(SettingsHomeItem.Disable))">SettingsMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(ShutdownHomeItem.Disable))">ShutdownMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(FavoritesHomeItem.Disable))">FavoritesMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(WeatherHomeItem.Disable))">WeatherMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(MusicVideoHomeItem.Disable))">MusicVideosMainMenu</include>
			<include condition="String.IsEmpty(Skin.String(Custom1HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom1HomeItem.Path))">CustomMainMenuItem1</include>
			<include condition="String.IsEmpty(Skin.String(Custom2HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom2HomeItem.Path))">CustomMainMenuItem2</include>
			<include condition="String.IsEmpty(Skin.String(Custom3HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom3HomeItem.Path))">CustomMainMenuItem3</include>
			<include condition="String.IsEmpty(Skin.String(Custom4HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom4HomeItem.Path))">CustomMainMenuItem4</include>
			<include condition="String.IsEmpty(Skin.String(Custom5HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom5HomeItem.Path))">CustomMainMenuItem5</include>
			<include condition="String.IsEmpty(Skin.String(Custom6HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom6HomeItem.Path))">CustomMainMenuItem6</include>
			<include condition="String.IsEmpty(Skin.String(Custom7HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom7HomeItem.Path))">CustomMainMenuItem7</include>
			<include condition="String.IsEmpty(Skin.String(Custom8HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom8HomeItem.Path))">CustomMainMenuItem8</include>
			<include condition="String.IsEmpty(Skin.String(Custom9HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom9HomeItem.Path))">CustomMainMenuItem9</include>
			<include condition="String.IsEmpty(Skin.String(Custom10HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom10HomeItem.Path))">CustomMainMenuItem10</include>
			<include condition="String.IsEmpty(Skin.String(Custom11HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom11HomeItem.Path))">CustomMainMenuItem11</include>
			<include condition="String.IsEmpty(Skin.String(Custom12HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom12HomeItem.Path))">CustomMainMenuItem12</include>
			<include condition="String.IsEmpty(Skin.String(Custom13HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom13HomeItem.Path))">CustomMainMenuItem13</include>
			<include condition="String.IsEmpty(Skin.String(Custom14HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom14HomeItem.Path))">CustomMainMenuItem14</include>
			<include condition="String.IsEmpty(Skin.String(Custom15HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom15HomeItem.Path))">CustomMainMenuItem15</include>
			<include condition="String.IsEmpty(Skin.String(Custom16HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom16HomeItem.Path))">CustomMainMenuItem16</include>
			<include condition="String.IsEmpty(Skin.String(Custom17HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom17HomeItem.Path))">CustomMainMenuItem17</include>
			<include condition="String.IsEmpty(Skin.String(Custom18HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom18HomeItem.Path))">CustomMainMenuItem18</include>
			<include condition="String.IsEmpty(Skin.String(Custom19HomeItem.Disable)) + !String.IsEmpty(Skin.String(Custom19HomeItem.Path))">CustomMainMenuItem19</include>
		</content>
	</include>
	<!-- SubMenu -->
	<include name="CustomSubMenu">
		<content>
			<include>skinshortcuts-submenu</include>
		</content>
	</include>
</includes>